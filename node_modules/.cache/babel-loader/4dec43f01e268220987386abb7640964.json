{"remainingRequest":"D:\\liu\\company\\com_websit\\HX\\hxjrsy-protal\\node_modules\\_thread-loader@2.1.3@thread-loader\\dist\\cjs.js!D:\\liu\\company\\com_websit\\HX\\hxjrsy-protal\\node_modules\\_babel-loader@8.2.5@babel-loader\\lib\\index.js!D:\\liu\\company\\com_websit\\HX\\hxjrsy-protal\\node_modules\\_vue-loader@16.8.3@vue-loader\\dist\\templateLoader.js??ref--6!D:\\liu\\company\\com_websit\\HX\\hxjrsy-protal\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js??ref--1-0!D:\\liu\\company\\com_websit\\HX\\hxjrsy-protal\\node_modules\\_vue-loader@16.8.3@vue-loader\\dist\\index.js??ref--1-1!D:\\liu\\company\\com_websit\\HX\\hxjrsy-protal\\src\\views\\protal\\home.vue?vue&type=template&id=6b442792&scoped=true","dependencies":[{"path":"D:\\liu\\company\\com_websit\\HX\\hxjrsy-protal\\src\\views\\protal\\home.vue","mtime":1653796842441},{"path":"D:\\liu\\company\\com_websit\\HX\\hxjrsy-protal\\babel.config.js","mtime":1639197980677},{"path":"D:\\liu\\company\\com_websit\\HX\\hxjrsy-protal\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\liu\\company\\com_websit\\HX\\hxjrsy-protal\\node_modules\\_thread-loader@2.1.3@thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\liu\\company\\com_websit\\HX\\hxjrsy-protal\\node_modules\\_babel-loader@8.2.5@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\liu\\company\\com_websit\\HX\\hxjrsy-protal\\node_modules\\_vue-loader@16.8.3@vue-loader\\dist\\templateLoader.js","mtime":499162500000},{"path":"D:\\liu\\company\\com_websit\\HX\\hxjrsy-protal\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\liu\\company\\com_websit\\HX\\hxjrsy-protal\\node_modules\\_vue-loader@16.8.3@vue-loader\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}