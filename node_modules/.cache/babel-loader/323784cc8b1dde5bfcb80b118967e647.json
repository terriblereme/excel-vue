{"remainingRequest":"D:\\liu\\company\\excel报表\\execl-protal\\node_modules\\babel-loader\\lib\\index.js!D:\\liu\\company\\excel报表\\execl-protal\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!D:\\liu\\company\\excel报表\\execl-protal\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\liu\\company\\excel报表\\execl-protal\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\liu\\company\\excel报表\\execl-protal\\src\\views\\admin\\execl.vue?vue&type=template&id=4e8b14de&scoped=true","dependencies":[{"path":"D:\\liu\\company\\excel报表\\execl-protal\\src\\views\\admin\\execl.vue","mtime":1676891792879},{"path":"D:\\liu\\company\\excel报表\\execl-protal\\babel.config.js","mtime":1639197980677},{"path":"D:\\liu\\company\\excel报表\\execl-protal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1669859218110},{"path":"D:\\liu\\company\\excel报表\\execl-protal\\node_modules\\babel-loader\\lib\\index.js","mtime":1669859218625},{"path":"D:\\liu\\company\\excel报表\\execl-protal\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1669859219032},{"path":"D:\\liu\\company\\excel报表\\execl-protal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1669859218110},{"path":"D:\\liu\\company\\excel报表\\execl-protal\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1669859218719}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVGV4dFZOb2RlIGFzIF9jcmVhdGVUZXh0Vk5vZGUsIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIHdpdGhDdHggYXMgX3dpdGhDdHgsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jaywgcHVzaFNjb3BlSWQgYXMgX3B1c2hTY29wZUlkLCBwb3BTY29wZUlkIGFzIF9wb3BTY29wZUlkIH0gZnJvbSAidnVlIjsKCmNvbnN0IF93aXRoU2NvcGVJZCA9IG4gPT4gKF9wdXNoU2NvcGVJZCgiZGF0YS12LTRlOGIxNGRlIiksIG4gPSBuKCksIF9wb3BTY29wZUlkKCksIG4pOwoKY29uc3QgX2hvaXN0ZWRfMSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCLmn6XnnIvmiYDmnIlzaGVldCIpOwoKY29uc3QgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCLmn6XnnIvlhbblroMiKTsKCmNvbnN0IF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgi5a+85Ye6Iik7Cgpjb25zdCBfaG9pc3RlZF80ID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIuaJk+WNsCIpOwoKY29uc3QgX2hvaXN0ZWRfNSA9IHsKICBpZDogInByaW50LWFyZWEiLAogIHN0eWxlOiB7CiAgICAiZGlzcGxheSI6ICJub25lIiwKICAgICJwb3NpdGlvbiI6ICJhYnNvbHV0ZSIsCiAgICAiei1pbmRleCI6ICIwIiwKICAgICJ0b3AiOiAiMjVweCIsCiAgICAid2lkdGgiOiAiMTAwJSIsCiAgICAiaGVpZ2h0IjogIjEwdmgiLAogICAgIm92ZXJmbG93IjogImhpZGRlbiIKICB9Cn07CmNvbnN0IF9ob2lzdGVkXzYgPSB7CiAgaWQ6ICJwcmludC1odG1sIiwKICByZWY6ICJwcmludFBheUZlZU5ldyIKfTsKCmNvbnN0IF9ob2lzdGVkXzcgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKCgpID0+IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICBpZDogImx1Y2t5c2hlZXQiLAogIHN0eWxlOiB7CiAgICAibWFyZ2luIjogIjBweCIsCiAgICAicGFkZGluZyI6ICIwcHgiLAogICAgInBvc2l0aW9uIjogImFic29sdXRlIiwKICAgICJ3aWR0aCI6ICIxMDAlIiwKICAgICJoZWlnaHQiOiAiMTAwJSIsCiAgICAibGVmdCI6ICIwcHgiLAogICAgInRvcCI6ICIyMDBweCIKICB9Cn0pXSwgLTEKLyogSE9JU1RFRCAqLwopKTsKCmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgY29uc3QgX2NvbXBvbmVudF9lbF9idXR0b24gPSBfcmVzb2x2ZUNvbXBvbmVudCgiZWwtYnV0dG9uIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgbnVsbCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIG51bGwsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9idXR0b24sIHsKICAgIGNsYXNzOiAidG9vbCIsCiAgICBwbGFpbjogIiIsCiAgICBvbkNsaWNrOiAkb3B0aW9ucy5vbkNoZWNrCiAgfSwgewogICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW19ob2lzdGVkXzFdKSwKICAgIF86IDEKICAgIC8qIFNUQUJMRSAqLwoKICB9LCA4CiAgLyogUFJPUFMgKi8KICAsIFsib25DbGljayJdKSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfYnV0dG9uLCB7CiAgICBjbGFzczogInRvb2wiLAogICAgcGxhaW46ICIiLAogICAgb25DbGljazogJG9wdGlvbnMub25EYXRhCiAgfSwgewogICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW19ob2lzdGVkXzJdKSwKICAgIF86IDEKICAgIC8qIFNUQUJMRSAqLwoKICB9LCA4CiAgLyogUFJPUFMgKi8KICAsIFsib25DbGljayJdKSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfYnV0dG9uLCB7CiAgICBjbGFzczogInRvb2wiLAogICAgcGxhaW46ICIiLAogICAgb25DbGljazogJG9wdGlvbnMuZG93bmxvYWQKICB9LCB7CiAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbX2hvaXN0ZWRfM10pLAogICAgXzogMQogICAgLyogU1RBQkxFICovCgogIH0sIDgKICAvKiBQUk9QUyAqLwogICwgWyJvbkNsaWNrIl0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9idXR0b24sIHsKICAgIGNsYXNzOiAidG9vbCIsCiAgICBwbGFpbjogIiIsCiAgICBvbkNsaWNrOiAkb3B0aW9ucy5wcmludEV4Y2VsCiAgfSwgewogICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW19ob2lzdGVkXzRdKSwKICAgIF86IDEKICAgIC8qIFNUQUJMRSAqLwoKICB9LCA4CiAgLyogUFJPUFMgKi8KICAsIFsib25DbGljayJdKV0pLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgICAg5omT5Y2w5YaF5a655Yy65Z+f77yM6buY6K6k5LiN5pi+56S677yM54K55Ye75omT5Y2w5ZCO5omN5pi+56S6IiksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzUsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF82LCBudWxsLCA1MTIKICAvKiBORUVEX1BBVENIICovCiAgKV0pXSksIF9ob2lzdGVkXzddLCA2NAogIC8qIFNUQUJMRV9GUkFHTUVOVCAqLwogICk7Cn0="},{"version":3,"mappings":";;;;iDAGuD;;iDACD;;iDACA;;iDACE;;;EAIjDA,EAAE,EAAC;EAAaC,KAOL,EAPK;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;;;EAQdD,EAAE,EAAC;EAAaE,GAAG,EAAC;;;gEAG7BC,oBAEM,KAFN,EAEM,IAFN,EAEM,cADJA,oBAAyH,KAAzH,EAAyH;EAApHH,EAAE,EAAC,YAAiH;EAApGC,KAA6F,EAA7F;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;AAAoG,CAAzH,CACI,CAFN;;AAAA;;;;;6DApBAE,oBAmBM,KAnBN,EAmBM,IAnBN,EAmBM,CAlBJA,oBAKM,KALN,EAKM,IALN,EAKM,CAJFC,aAAsEC,oBAAtE,EAAsE;IAAzDC,KAAK,EAAC,MAAmD;IAA5CC,KAAK,EAAL,EAA4C;IAArCC,OAAK,EAAEC;EAA8B,CAAtE;sBAAiD,MAAS;;;;GAA1D;;EAAA,cAIE,EAHFL,aAAgEC,oBAAhE,EAAgE;IAAnDC,KAAK,EAAC,MAA6C;IAAtCC,KAAK,EAAL,EAAsC;IAA/BC,OAAK,EAAEC;EAAwB,CAAhE;sBAAgD,MAAI;;;;GAApD;;EAAA,cAGE,EAFJL,aAAgEC,oBAAhE,EAAgE;IAAnDC,KAAK,EAAC,MAA6C;IAAtCC,KAAK,EAAL,EAAsC;IAA/BC,OAAK,EAAEC;EAAwB,CAAhE;sBAAkD,MAAE;;;;GAApD;;EAAA,cAEI,EADJL,aAAkEC,oBAAlE,EAAkE;IAArDC,KAAK,EAAC,MAA+C;IAAxCC,KAAK,EAAL,EAAwC;IAAjCC,OAAK,EAAEC;EAA0B,CAAlE;sBAAoD,MAAE;;;;GAAtD;;EAAA,cACI,CALN,CAkBI,EAXJC,gDAWI,EAVJP,oBASM,KATN,cASM,CADJA,oBAAgD,KAAhD,cAAgD,IAAhD,EAAgD;EAAA;EAAhD,CACI,CATN,CAUI,CAnBN,GAoBAQ","names":["id","style","ref","_createElementVNode","_createVNode","_component_el_button","class","plain","onClick","$options","_createCommentVNode","_hoisted_7"],"sourceRoot":"","sources":["D:\\liu\\company\\excel报表\\execl-protal\\src\\views\\admin\\execl.vue"],"sourcesContent":["<template>\r\n<div>\r\n  <div >\r\n      <el-button   class=\"tool\" plain @click=\"onCheck\">查看所有sheet</el-button>\r\n      <el-button   class=\"tool\" plain @click=\"onData\">查看其它</el-button>\r\n    <el-button   class=\"tool\" plain @click=\"download\">导出</el-button>\r\n    <el-button   class=\"tool\" plain @click=\"printExcel\">打印</el-button>\r\n  </div>\r\n\r\n  <!--    打印内容区域，默认不显示，点击打印后才显示-->\r\n  <div id=\"print-area\" style=\"\r\ndisplay: none;\r\nposition: absolute;\r\nz-index: 0;\r\ntop: 25px;\r\nwidth: 100%;\r\nheight: 10vh;\r\noverflow: hidden;\">\r\n    <div id=\"print-html\" ref=\"printPayFeeNew\"></div>\r\n  </div>\r\n</div>\r\n<div>\r\n  <div id=\"luckysheet\" style=\"margin:0px;padding:0px;position:absolute;width:100%;height:100%;left: 0px;top: 200px;\"></div>\r\n</div>\r\n\r\n\r\n\r\n</template>\r\n<script>\r\nimport LuckyExcel from 'luckyexcel'\r\nimport exportExcel from '@/api/exportExcel.js'\r\nimport sheetChart from '@/chart/sheetChart'\r\n\r\nexport default {\r\n  name: 'EditExcel',\r\n  flag: true,\r\n  props: {\r\n    // 显示的excel文件\r\n    file: {\r\n      default: () => {\r\n        return null\r\n      },\r\n      type: Object\r\n    },\r\n    // 打印时base64图片的位置\r\n    printPosition: {\r\n      default: 'center',\r\n      type: String\r\n    },\r\n    showDownload: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    showExport: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    showImport: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    showPrintDefault: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    showPrint: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      // excel基础配置\r\n      luckysheetParam: {\r\n        // 对应区域\r\n        containerId: 'editSheet',\r\n        // 语言\r\n        lang: 'zh'\r\n      },\r\n      // 打印基础配置\r\n      printParam: {\r\n        // 对应区域\r\n        id: 'print_html'\r\n      },\r\n      option1:{\r\n        container: \"luckysheet\",\r\n        title: '123456', // 设定表格名称\r\n        lang: 'zh', // 设定表格语言\r\n        name: \"Cell\", //工作表名称\r\n        showtoolbarConfig: {\r\n          print: false // 隐藏插件内部打印按钮\r\n        },\r\n        showinfobar: false, // 显示头部返回标题栏\r\n        data: [\r\n          {\r\n            name: 'cell',\r\n            color: 'red',\r\n            index: 1,\r\n            status: 1,\r\n            order: 1,\r\n            celldata: [\r\n              {\r\n                r: 0, // 行\r\n                c: 0, // 列\r\n                v: 'udsfhauhduahufhuh' // 值\r\n              },\r\n            ],\r\n            config: {}\r\n          },\r\n          {\r\n            name: 'Sheet2',\r\n            color: 'green',\r\n            index: 1,\r\n            status: 0,\r\n            order: 1,\r\n            celldata: [\r\n              {r:0,\r\n                c:0,\r\n                v:'nohao'}\r\n            ],\r\n            config: {}\r\n          },\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.initExcel1()\r\n  },\r\n  mounted() {\r\n    if (this.file) {\r\n      this.beforeUpload(this.file)\r\n      return\r\n    }\r\n    // eslint-disable-next-line no-debugger\r\n   // this.initExcel()\r\n  },\r\n  methods: {\r\n    /**\r\n     * @description: 初始化excel\r\n     * @author: flyer\r\n     * @param {Object} exportJson 初始化数据\r\n     */\r\n    initExcel() {\r\n      // eslint-disable-next-line no-undef\r\n      var options = {\r\n        container: \"luckysheet\",\r\n        title: 'Luckysheet data test', // 设定表格名称\r\n        lang: 'zh', // 设定表格语言\r\n        name: \"Cell\", //工作表名称\r\n        showtoolbarConfig: {\r\n          print: false // 隐藏插件内部打印按钮\r\n        },\r\n        showinfobar: false, // 显示头部返回标题栏\r\n      }\r\n      this.$nextTick(() => {\r\n        $(function () {\r\n          luckysheet.create(\r\n              options\r\n          );\r\n        });\r\n      });\r\n    },\r\n    initExcel1() {\r\n      var options=this.option1\r\n      console.log(options.data[0].celldata[0].v)\r\n      options.data[0].celldata[0].v=\"第一格的定位测试\"\r\n      this.$nextTick(() => {\r\n        $(function () {\r\n          luckysheet.create(\r\n              options\r\n          );\r\n        });\r\n      });\r\n    },\r\n    /**\r\n     * @description: 查看表格参数\r\n     * @author: flyer\r\n     * @param {Boolean} flag 是否默认打印\r\n     */\r\n    onCheck(){\r\n       console.log(luckysheet.getAllSheets())\r\n    },\r\n    onData(){\r\n      console.info(luckysheet.getAllSheets())\r\n    },\r\n\r\n\r\n    /**\r\n     * @description: 打印功能简化\r\n     * @author: flyer\r\n     * @param {Boolean} flag 是否默认打印\r\n     */\r\n    printFn(flag) {\r\n      // eslint-disable-next-line no-undef\r\n      const src = flag ? luckysheet.getScreenshot() : luckysheet.getScreenshot({ range: 'A1:J50' })\r\n      const $img = `<img src=${src} style=\"max-width: 90%;\" />`\r\n      this.$nextTick(() => {\r\n        document.querySelector(`#${this.printParam.id}`).innerHTML = $img\r\n      })\r\n    },\r\n\r\n    /**\r\n     * @description: 自动划区的打印功能\r\n     * @author: flyer\r\n     */\r\n    // 获取表格中包含内容的row，column\r\n    getExcelRowColumn() {\r\n      const sheetData = luckysheet.getSheetData();\r\n      let objRowColumn = {\r\n        row: [null, null], //行\r\n        column: [null, null], //列\r\n      };\r\n      sheetData.forEach((item, index) => {\r\n        //行数\r\n        item.forEach((it, itemIndex) => {\r\n          if (it !== null) {\r\n            if (objRowColumn.row[0] == null) objRowColumn.row[0] = index; // row第一位\r\n            objRowColumn.row[1] = index; //row第二位\r\n            if (objRowColumn.column[0] == null)\r\n              objRowColumn.column[0] = itemIndex; //column第一位\r\n            objRowColumn.column[1] = itemIndex; //column第二位\r\n          }\r\n        });\r\n      });\r\n      return objRowColumn;\r\n    },\r\n    printExcel() {\r\n      let RowColumn = this.getExcelRowColumn() // 获取有值的行和列\r\n      RowColumn.column[0] = 0 //因需要打印左边的边框，需重新设置\r\n      luckysheet.setRangeShow(RowColumn) // 进行选区操作\r\n      let src = luckysheet.getScreenshot(); // 生成base64图片\r\n      let $img = `<img src=${src} style=\"width: 100%;position: absolute;left:-20px\" />`;\r\n      document.querySelector(\"#print-area\").style.display = \"block\";\r\n      this.$nextTick(() => {\r\n        document.querySelector(\"#print-html\").innerHTML = $img;\r\n        Print(this.$refs.printPayFeeNew) // Print.js插件\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * @description: 获取在线excel数据后编辑成excel文件导出\r\n     * @author: flyer\r\n     */\r\n    async exportExcel() {\r\n      // eslint-disable-next-line no-undef\r\n      const data = luckysheet.getluckysheetfile()\r\n      const exportData = await exportExcel(data)\r\n      const blob = new Blob([exportData])\r\n      const file = new File([blob], this.file?.name || '文档.xlsx', { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' })\r\n      return file\r\n    },\r\n\r\n    /**\r\n     * @description: 导出excel文件对象\r\n     * @author: flyer\r\n     */\r\n    async exportFile() {\r\n      const file = await this.exportExcel()\r\n      // this.$emit('exportFile', file)\r\n      this.beforeUpload(file)\r\n    },\r\n\r\n    /**\r\n     * @description: 浏览器导出excel\r\n     * @author: flyer\r\n     * @param {Object} blob excel数据，也可以是file对象\r\n     */\r\n    async download() {\r\n      const file = await this.exportExcel()\r\n      if (window.navigator && window.navigator.msSaveBlob) {\r\n        window.navigator.msSaveBlob(file, file.name)\r\n      } else {\r\n        const a = document.createElement('a')\r\n        a.download = file.name\r\n        a.href = URL.createObjectURL(file)\r\n        a.style.display = 'none'\r\n        document.body.appendChild(a)\r\n        a.click()\r\n        document.body.removeChild(a)\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @description: 导入excel文件\r\n     * @author: flyer\r\n     * @param {Object} file excel文件\r\n     */\r\n    beforeUpload(file) {\r\n      const suffix = file.name.split('.')\r\n      if (suffix[suffix.length - 1] !== 'xlsx') {\r\n        this.$message.error('文件格式只能是.xlsx')\r\n        return false\r\n      }\r\n      // eslint-disable-next-line no-undef\r\n      luckysheet.destroy()\r\n      // eslint-disable-next-line no-undef\r\n      LuckyExcel.transformExcelToLucky(file, (exportJson) => {\r\n        if (exportJson.sheets == null || exportJson.sheets.length === 0) {\r\n          this.$message.warning('读取excel文件内容失败，目前不支持xls文件!')\r\n          return\r\n        }\r\n        this.initExcel(exportJson)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n$height:40px;\r\n.lucky-excel{\r\n  position:relative;overflow:hidden;width:100%;height:100%;\r\n  .container{\r\n    width:100%;height:calc(100% - #{$height});\r\n  }\r\n  .tool-bar{\r\n    display:flex;width:100%;height: $height;justify-content:left;align-items:center;\r\n    ::v-deep .el-button{\r\n      padding:0 10px;\r\n      height: 30px;\r\n      line-height: 30px;\r\n    }\r\n    .tool{\r\n      margin-left:10px\r\n    }\r\n  }\r\n}\r\n</style>"]}]}